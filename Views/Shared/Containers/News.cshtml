@model KeplerCMS.Models.Page
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@functions
{

    void GenerateLink(string text, string href)
    {
        var link = (href.Contains("client")) ? "<a href='"+href+ "' target='client' onclick='openOrFocusHabbo(this); return false;'>" + text+"</a>" : "<a href='"+href+"'>"+text+"</a>";
        @Html.Raw(link);
    }
}
<tr>
    <td colspan="3" style="padding-bottom: 3px;">

        <div id="promoarea">
            <!-- NEWS ITEMS INCLUDE -->

            <script type="text/javascript">
            var promoPages = [
                @{
                    foreach (var promo in Model.Promos)
                    {
                        @:{
                        @:image: "<img src='@promo.Img' alt=''>",
                        @:links: [

                        if(promo.Link1Text != null && promo.Link1Text != "")
                        {
                             @: " @{ GenerateLink(promo.Link1Text, promo.Link1Href); } ",
                        }

                        if(promo.Link2Text != null &&promo.Link2Text != "")
                        {   
                             @: " @{ GenerateLink(promo.Link2Text, promo.Link2Href); } "
                        }
                        @:],
                        @:text: "@promo.Teaser"
                        @:},
                    }

                }


            ]; </script>

            <div id="promoheader">
                <h2>@Model.Details.NewsHeader</h2>
                <ul style="display: block;" id="promoheader-selectors">
                    @{
                        if (Model.Promos != null && Model.Promos.Count() > 1)
                        {
                            for (var i = 0; i < Model.Promos.Count(); i++)
                            {
                                var selected = (i == 0) ? "class=selected" : "";
                                <li><a href="#" onclick="showPromo(@i); return false;" @selected>@(i+1)</a></li>
                            }
                        }

                    }

                </ul>
            </div>

            <div id="promocontent">
                @{
                    if (Model.Promos != null && Model.Promos.Count() > 0)
                    {
                        <div id="promobody">
                            <p id="promoimage"><a href="@Model.Promos[0].Link1Href" id="promo-link"><img src="@Model.Promos[0].Img" alt=""></a></p>
                            <div class="promotext">
                                <p id="promotext-content">@Model.Promos[0].Teaser</p>
                            </div>
                            <div id="promolinks">
                                <ul id="promolinks-list">
                                    @{
                                        if (Model.Promos[0].Link1Text != null && Model.Promos[0].Link1Text != "")
                                        {
                                            <li>@{ GenerateLink(Model.Promos[0].Link1Text, Model.Promos[0].Link1Href); }</li>
                                        }

                                        if (Model.Promos[0].Link2Text != null && Model.Promos[0].Link2Text != "")
                                        {
                                            <li>@{ GenerateLink(Model.Promos[0].Link2Text, Model.Promos[0].Link2Href);}</li>
                                        }
                                    }
                                </ul>
                            </div>
                        </div>
                    }
                }
            </div>

        </div>
        <div id="newsbox">
            <div id="newsbox-header">
                <h2>@DbRes.T("news_header", "news")</h2>
            </div>
            <div id="newsbox-text">
                @{
                    if (Model.News != null)
                    {

                        foreach (var news in Model.News.Take(3))
                        {
                            <div class="newsitem oldnewsitem">
                                <h3>
                                    <span class="articledate">[@news.PublishDate.ToString("dd-MM-yy").Replace('-', Configuration.GetSection("keplercms").GetSection("customizations")["dateSeparator"][0])]</span>
                                    <a href="/news/@news.Slug">@news.Title</a>
                                </h3>
                                <p>
                                    @news.Teaser
                                </p>
                            </div>
                        }
                        if (Model.News.Count() > 3)
                        {
                            <div class="hr">&nbsp;</div>
                            foreach (var news in Model.News.Skip(3).Take(2))
                            {
                                <div class="newsitem oldnewsitem">
                                    <h3>
                                        <span class="articledate">[@news.PublishDate.ToString("dd-MM-yy").Replace('-', Configuration.GetSection("keplercms").GetSection("customizations")["dateSeparator"][0])]</span>
                                        <a href="/news/@news.Slug">@news.Title</a>
                                    </h3>
                                </div>
                            }
                        }
                    }
                }
            </div>
            <div id="newsbox-footer">
                <div class="promo-button"><a href="/news">@DbRes.T("readmore", "news")</a></div>
            </div>
        </div>


    </td>
</tr>
